                                TODO


            This is the roadmap of upcoming developments

* see http://github.com/sukria/dancer/issues#issue/125

* headers (a sane Dancer::Header class for all headers, for D::H::PSGI, * D::H::Standalone, D::Request, D::Response);
* rework the concept of D::Engines so we can have multiple D::Serializers loaded at once
* possibility to define a serializer for a route, a list of routes, in a route (locally), ...
* <dams> : nothing should be more global than to a Dancer app. Dancer should not become a bloated MVC, but to be pragmmatic :
  * a Dancer app should have at most only one template engine attached to it
  * a Dancer app should have at most only one session engine attached to it
  * a Dancer app should be able to have multiple serializer attached to it
* <dams> : config should be changed so that
  * template, session, serializer defined would be by default global.
  * if specified in the config, templates and sessions could be set per app
  * if specified in the config, serializers could be set per app and routes.
* <dams> : the serializer keyword should limit the serializer scope the route (if used inside a route definition) or to the app (if used outside of a route definition)
* <dams> : Change Dancer::Plugin API : Dancer::Plugin::Foo should inherit from Dancer::Plugin themselves.
